From 83610c5cd3e7bef962e28cf7f9c60d2ccc3da9d4 Mon Sep 17 00:00:00 2001
From: Octavian Voicu <octavian.voicu@gmail.com>
Date: Sun, 28 Dec 2014 20:25:52 +0100
Subject: winex11.drv: Make X11 window rect empty for WS_EX_TRANSPARENT
 windows.

---
 dlls/winex11.drv/event.c  |  9 +++++++++
 dlls/winex11.drv/window.c | 25 +++++++++++++++++++++++++
 2 files changed, 34 insertions(+)

diff --git a/dlls/winex11.drv/event.c b/dlls/winex11.drv/event.c
index ea24471..f126c41 100644
--- a/dlls/winex11.drv/event.c
+++ b/dlls/winex11.drv/event.c
@@ -1061,6 +1061,7 @@ void X11DRV_ConfigureNotify( HWND hwnd, XEvent *xev )
     BOOL root_coords;
     int cx, cy, x = event->x, y = event->y;
     DWORD style;
+    DWORD ex_style;
 
     if (!hwnd) return;
     if (!(data = get_win_data( hwnd ))) return;
@@ -1107,6 +1108,14 @@ void X11DRV_ConfigureNotify( HWND hwnd, XEvent *xev )
     X11DRV_X_to_window_rect( data, &rect );
     if (root_coords) MapWindowPoints( 0, parent, (POINT *)&rect, 2 );
 
+    ex_style = GetWindowLongW( hwnd, GWL_EXSTYLE );
+    if (ex_style & WS_EX_TRANSPARENT)
+    {
+        FIXME("transparent window, fixing window rect\n");
+        rect.right = rect.left;
+        rect.bottom = rect.top;
+    }
+
     /* Compare what has changed */
 
     x     = rect.left;
diff --git a/dlls/winex11.drv/window.c b/dlls/winex11.drv/window.c
index 06e2294..2dd8ed4 100644
--- a/dlls/winex11.drv/window.c
+++ b/dlls/winex11.drv/window.c
@@ -1783,6 +1783,7 @@ static struct x11drv_win_data *X11DRV_create_win_data( HWND hwnd, const RECT *wi
     Display *display;
     struct x11drv_win_data *data;
     HWND parent;
+    DWORD ex_style;
 
     if (!(parent = GetAncestor( hwnd, GA_PARENT ))) return NULL;  /* desktop */
 
@@ -1798,6 +1799,17 @@ static struct x11drv_win_data *X11DRV_create_win_data( HWND hwnd, const RECT *wi
 
     data->whole_rect = data->window_rect = *window_rect;
     data->client_rect = *client_rect;
+    ex_style = GetWindowLongW( hwnd, GWL_EXSTYLE );
+    if (ex_style & WS_EX_TRANSPARENT)
+    {
+        FIXME("transparent window, fixing window rect\n");
+        data->window_rect.right = data->window_rect.left;
+        data->window_rect.bottom = data->window_rect.top;
+        data->whole_rect = data->window_rect;
+        data->client_rect.right = data->client_rect.left;
+        data->client_rect.bottom = data->client_rect.top;
+    }
+
     if (parent == GetDesktopWindow())
     {
         create_whole_window( data );
@@ -2215,6 +2227,7 @@ void CDECL X11DRV_WindowPosChanged( HWND hwnd, HWND insert_after, UINT swp_flags
     DWORD new_style = GetWindowLongW( hwnd, GWL_STYLE );
     RECT old_window_rect, old_whole_rect, old_client_rect;
     int event_type;
+    DWORD ex_style;
 
     if (!(data = get_win_data( hwnd ))) return;
 
@@ -2236,6 +2249,18 @@ void CDECL X11DRV_WindowPosChanged( HWND hwnd, HWND insert_after, UINT swp_flags
     TRACE( "win %p window %s client %s style %08x flags %08x\n",
            hwnd, wine_dbgstr_rect(rectWindow), wine_dbgstr_rect(rectClient), new_style, swp_flags );
 
+    ex_style = GetWindowLongW( hwnd, GWL_EXSTYLE );
+    if (ex_style & WS_EX_TRANSPARENT)
+    {
+        FIXME("transparent window, fixing window rect\n");
+        data->window_rect.right = data->window_rect.left;
+        data->window_rect.bottom = data->window_rect.top;
+        data->whole_rect.right = data->whole_rect.left;
+        data->whole_rect.bottom = data->whole_rect.top;
+        data->client_rect.right = data->client_rect.left;
+        data->client_rect.bottom = data->client_rect.top;
+    }
+
     if (!IsRectEmpty( &valid_rects[0] ))
     {
         Window window = data->whole_window;
-- 
2.1.0
