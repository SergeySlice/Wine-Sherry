diff --git a/dlls/d3d9/tests/device.c b/dlls/d3d9/tests/device.c
index 5598ecb..b8ff23e 100644
--- a/dlls/d3d9/tests/device.c
+++ b/dlls/d3d9/tests/device.c
@@ -1250,6 +1250,24 @@ static void test_depthstenciltest(void)
     hr = IDirect3DDevice9_Clear(pDevice, 0, NULL, D3DCLEAR_ZBUFFER, 0x00000000, 1.0, 0);
     ok(hr == D3D_OK, "IDirect3DDevice9_Clear failed with %s\n", DXGetErrorString9(hr));
 
+    /* disable depthstencil surface, then call Reset with AutoDepthStencil=TRUE */
+    hr = IDirect3DDevice9_SetDepthStencilSurface(pDevice, NULL);
+    ok(hr == D3D_OK, "IDirect3DDevice9_SetDepthStencilSurface failed with %s\n",
+       DXGetErrorString9(hr));
+
+    /* this fails because we still hold a reference to the stencil surface */
+    hr = IDirect3DDevice9_Reset(pDevice, &d3dpp);
+    todo_wine { ok(hr == D3DERR_INVALIDCALL, "IDirect3DDevice9_Reset failed with %s\n",
+                   DXGetErrorString9(hr)); }
+    if(pDepthStencil) IDirect3DSurface9_Release(pDepthStencil);
+
+    hr = IDirect3DDevice9_Reset(pDevice, &d3dpp);
+    ok(hr == D3D_OK, "IDirect3DDevice9_Reset failed with %s\n", DXGetErrorString9(hr));
+
+    hr = IDirect3DDevice9_GetDepthStencilSurface(pDevice, &pDepthStencil);
+    todo_wine { ok(hr == D3D_OK, "IDirect3DDevice9_GetDepthStencilSurface failed with %s\n",
+                   DXGetErrorString9(hr)); }
+
     if(pDepthStencil) IDirect3DSurface9_Release(pDepthStencil);
     if(pDevice) IDirect3D9_Release(pDevice);


 